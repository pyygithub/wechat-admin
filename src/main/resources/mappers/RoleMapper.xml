<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pyy.wechat.mapper.RoleMapper">
  <resultMap id="BaseResultMap" type="com.pyy.wechat.model.Role">
    <id column="role_id" jdbcType="INTEGER" property="roleId" />
    <result column="role_key" jdbcType="VARCHAR" property="roleKey" />
    <result column="create_time" jdbcType="VARCHAR" property="createTime" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="role_value" jdbcType="VARCHAR" property="roleValue" />
    <result column="company_id" jdbcType="BIGINT" property="companyId" />
  </resultMap>
  <sql id="Base_Column_List">
    role_id, role_key, create_time, description, role_value, company_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_role
    where role_id = #{roleId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sys_role
    where role_id = #{roleId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.pyy.wechat.model.Role">
    insert into sys_role (role_id, role_key, create_time, 
      description, role_value, company_id
      )
    values (#{roleId,jdbcType=INTEGER}, #{roleKey,jdbcType=VARCHAR}, #{createTime,jdbcType=VARCHAR}, 
      #{description,jdbcType=VARCHAR}, #{roleValue,jdbcType=VARCHAR}, #{companyId,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.pyy.wechat.model.Role">
    insert into sys_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        role_id,
      </if>
      <if test="roleKey != null">
        role_key,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="roleValue != null">
        role_value,
      </if>
      <if test="companyId != null">
        company_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="roleKey != null">
        #{roleKey,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="roleValue != null">
        #{roleValue,jdbcType=VARCHAR},
      </if>
      <if test="companyId != null">
        #{companyId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.pyy.wechat.model.Role">
    update sys_role
    <set>
      <if test="roleKey != null">
        role_key = #{roleKey,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="roleValue != null">
        role_value = #{roleValue,jdbcType=VARCHAR},
      </if>
      <if test="companyId != null">
        company_id = #{companyId,jdbcType=BIGINT},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pyy.wechat.model.Role">
    update sys_role
    set role_key = #{roleKey,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      role_value = #{roleValue,jdbcType=VARCHAR},
      company_id = #{companyId,jdbcType=BIGINT}
    where role_id = #{roleId,jdbcType=INTEGER}
  </update>

</mapper>